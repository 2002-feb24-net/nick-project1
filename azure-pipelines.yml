trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

pr:
- master

stages:

- stage: build

  variables:
    solutionPath: .
    buildConfiguration: Release

  jobs:

  - job: build

    pool:
      vmImage: ubuntu-latest

    steps:

    - script: dotnet build $(solutionPath) -c $(buildConfiguration)
      displayName: dotnet build

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: true
        arguments: -c $(buildConfiguration) -o publish
        zipAfterPublish: true
      displayName: dotnet publish

    - publish: publish
      artifact: app
      displayName: Publish artifact app

  - job: test

    pool:
      vmImage: windows-latest
    
    steps:

    - script: dotnet test $(solutionPath) -c $(buildConfiguration) --collect:"XPlat Code Coverage" --logger trx
      continueOnError:
      displayName: dotnet test

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: $(solutionPath)/**/*.trx
      displayName: Publish test results to build
      
    - task: PublishCodeCoverageResults@1
      condition: succeededOrFailed()
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(solutionPath)/**/coverage.cobertura.xml
      displayName: Publish code coverage to build

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: build

  jobs:

  - job: deploy

    pool:
      vmImage: ubuntu-latest
    
    steps:
    
    - download: current
      artifact: app

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: AzureRM
        azureSubscription: Pay-As-You-Go(0518cd5b-d389-4983-9496-cdcae31dcc60)
        appType: webApp
        WebAppName: restaurant-reviews-escalera
        packageForLinux: $(Pipeline.Workspace)/app/*.zip
      displayName: Deploy to Azure App Service