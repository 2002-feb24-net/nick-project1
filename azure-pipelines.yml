trigger:
- master

stages:

- stage: build

  jobs:

  - job: build

    pool:
      vmImage: 'ubuntu-latest'

    steps:

    - script: dotnet build
      displayName: dotnet build

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: true
        zipAfterPublish: true
      displayName: dotnet publish + zip

    - publish: '**/*.zip'
      artifact: app

  - job: test

    pool:
      vmImage: 'windows-latest'
    
    steps:

    - script: dotnet test --collect:"XPlat Code Coverage" --logger trx
      displayName: dotnet test

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
      displayName: Publish test results to build
      
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '**/coverage.cobertura.xml'
      displayName: Publish code coverage

- stage: deploy

  jobs:

  - job: deploy

    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
    
    - download: current
      artifact: app

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: AzureRM
        azureSubscription: Pay-As-You-Go(0518cd5b-d389-4983-9496-cdcae31dcc60)
        appType: webApp
        WebAppName: restaurant-reviews-escalera
        packageForLinux: '**/*.zip'
      displayName: Deploy to Azure App Service