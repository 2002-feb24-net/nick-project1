trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

pr:
- master

stages:

- stage: build
  displayName: build

  variables:
    solutionPath: .
    buildConfiguration: Release

  jobs:

  - job: build
    displayName: build

    pool:
      vmImage: ubuntu-latest

    steps:

    - script: dotnet build $(solutionPath) -c $(buildConfiguration)
      displayName: dotnet build

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: true
        arguments: -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/publish
        zipAfterPublish: false
      displayName: dotnet publish

    - publish: $(Build.ArtifactStagingDirectory)/publish
      artifact: app
      displayName: Publish artifact app

  - job: test
    displayName: test

    pool:
      vmImage: ubuntu-latest

    steps:

    - script: dotnet test $(solutionPath)
        --configuration $(buildConfiguration)
        --collect "XPlat Code Coverage"
        --logger trx
        --results-directory $(Common.TestResultsDirectory)
      continueOnError: true
      displayName: dotnet test

    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: $(Common.TestResultsDirectory)/*.trx
      displayName: Publish test results to build

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Common.TestResultsDirectory)/*/coverage.cobertura.xml
      displayName: Publish code coverage to build

- stage: deploy
  displayName: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: build

  jobs:

  - deployment: deploy_dev
    displayName: deploy dev

    pool:
      vmImage: ubuntu-latest

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: app
            displayName: Download app artifact

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: AzureRM
              azureSubscription: Pay-As-You-Go(0518cd5b-d389-4983-9496-cdcae31dcc60)
              appType: webApp
              WebAppName: restaurant-reviews-escalera
              packageForLinux: $(Pipeline.Workspace)/app
            displayName: Deploy to Azure App Service
